{"ast":null,"code":"var _jsxFileName = \"/Users/carolinejustafre/Desktop/ToDoListReact/src/components/AddTask.jsx\",\n  _s = $RefreshSig$();\n/**\n * Composant fonctionnel AddTask pour ajouter une nouvelle tâche à la liste.\n * \n * Props :\n * - onAdd : fonction appelée lorsqu'un utilisateur ajoute une tâche\n * \n * État :\n * - text : état local contenant le texte de la nouvelle tâche à ajouter\n * \n * Le composant retourne un formulaire avec un champ de texte et un bouton \"Ajouter la tâche\". \n * Lorsque l'utilisateur soumet le formulaire, la fonction onSubmit est appelée pour ajouter la tâche à la liste.\n * Si le champ de texte est vide, une alerte s'affiche demandant à l'utilisateur d'ajouter une tâche.\n * \n * Puis exportation du composant Task afin être utilisé ailleurs.\n */\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTask = _ref => {\n  _s();\n  let {\n    onAdd\n  } = _ref;\n  const [text, setText] = useState('');\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!text) {\n      alert('Please add a task');\n      return;\n    }\n    onAdd({\n      text\n    });\n    setText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Task\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Ajouter la t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTask, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddTask","_ref","_s","onAdd","text","setText","onSubmit","e","preventDefault","alert","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carolinejustafre/Desktop/ToDoListReact/src/components/AddTask.jsx"],"sourcesContent":["/**\n * Composant fonctionnel AddTask pour ajouter une nouvelle tâche à la liste.\n * \n * Props :\n * - onAdd : fonction appelée lorsqu'un utilisateur ajoute une tâche\n * \n * État :\n * - text : état local contenant le texte de la nouvelle tâche à ajouter\n * \n * Le composant retourne un formulaire avec un champ de texte et un bouton \"Ajouter la tâche\". \n * Lorsque l'utilisateur soumet le formulaire, la fonction onSubmit est appelée pour ajouter la tâche à la liste.\n * Si le champ de texte est vide, une alerte s'affiche demandant à l'utilisateur d'ajouter une tâche.\n * \n * Puis exportation du composant Task afin être utilisé ailleurs.\n */ \n\nimport React, { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('');\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!text) {\n      alert('Please add a task');\n      return;\n    }\n    onAdd({ text });\n    setText('');\n  };\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <input\n        type='text'\n        placeholder='Add Task'\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        />\n        <button className='btn'>Ajouter la tâche</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTask;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACxB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACJ,IAAI,EAAE;MACTK,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACF;IACAN,KAAK,CAAC;MAAEC;IAAK,CAAC,CAAC;IACfC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEN,OAAA;IAAMW,SAAS,EAAC,UAAU;IAACJ,QAAQ,EAAEA,QAAS;IAAAK,QAAA,eAC5CZ,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BZ,OAAA;QACAa,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEV,IAAK;QACZW,QAAQ,EAAGR,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACS,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvC,eACFrB,OAAA;QAAQW,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAClB,EAAA,CAzBIF,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AA2Bb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
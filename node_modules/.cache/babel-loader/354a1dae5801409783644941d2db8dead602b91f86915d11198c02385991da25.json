{"ast":null,"code":"var _jsxFileName = \"/Users/carolinejustafre/Desktop/ToDoListReact/src/App.js\",\n  _s = $RefreshSig$();\n// Importation de la bibliothèque React, de la fonction useState et des composants AddTask et Task.\nimport React, { useState } from 'react';\nimport AddTask from './components/AddTask';\nimport Task from './components/Task';\n\n// Définition de la fonction composant principale de l'application.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Création d'un état initial pour la liste de tâches.\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Faire les courses'\n  }, {\n    id: 2,\n    text: 'Jouer à la play'\n  }, {\n    id: 3,\n    text: 'Sortir le chien'\n  }]);\n\n  /**\n   * \n   * Définit une fonction pour ajouter une nouvelle tâche à la liste.\n   * \n   * Génère un identifiant unique pour la nouvelle tâche.\n   * Crée un nouvel objet tâche avec l'identifiant et la description passés en paramètre.\n   * Met à jour l'état de la liste de tâches en ajoutant la nouvelle tâche.\n   * \n   */\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  /**\n   * \n   * Définit une fonction pour supprimer une tâche de la liste.\n   * Met à jour l'état de la liste de tâches en supprimant la tâche avec l'identifiant passé en paramètre.\n   * \n   * */\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  /**\n   * \n   * Rendu de l'interface utilisateur.  \n   * \n   * <AddTask onAdd={addTask} /> Permet d'afficher le composant AddTask avec la fonction addTask en tant que props.\n   * \n   * Si la liste de tâches n'est pas vide, alors on affiche :\n   * les tâches pour chaque tâche dans la liste, avec l'identifiant, la description et la fonction deleteTask en tant que prop.\n   * \n   * Sinon, affiche un message indiquant qu'il n'y a pas de tâches.\n   * \n   * */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ma To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onDelete: deleteTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-tasks\",\n      children: \"Pas de t\\xE2che\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n// Exporte la fonction composant principale \"App\" pour pouvoir être utilisée ailleurs dans l'application.\n_s(App, \"FmVIO2+zr02LfwSAm3UjCOurj+8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddTask","Task","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","text","addTask","task","Math","floor","random","newTask","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","length","map","onDelete","_c","$RefreshReg$"],"sources":["/Users/carolinejustafre/Desktop/ToDoListReact/src/App.js"],"sourcesContent":["// Importation de la bibliothèque React, de la fonction useState et des composants AddTask et Task.\nimport React, { useState } from 'react'; \nimport AddTask from './components/AddTask'; \nimport Task from './components/Task'; \n\n// Définition de la fonction composant principale de l'application.\nfunction App() { \n\n    // Création d'un état initial pour la liste de tâches.\n    const [tasks, setTasks] = useState([ \n        {\n            id: 1,\n            text: 'Faire les courses',\n        },\n        {\n            id: 2,\n            text: 'Jouer à la play',\n        },\n        {\n            id: 3,\n            text: 'Sortir le chien',\n        },\n    ]);\n\n    /**\n     * \n     * Définit une fonction pour ajouter une nouvelle tâche à la liste.\n     * \n     * Génère un identifiant unique pour la nouvelle tâche.\n     * Crée un nouvel objet tâche avec l'identifiant et la description passés en paramètre.\n     * Met à jour l'état de la liste de tâches en ajoutant la nouvelle tâche.\n     * \n     */\n    const addTask = (task) => { \n        const id = Math.floor(Math.random() * 10000) + 1;\n        const newTask = { id, ...task };\n        setTasks([...tasks, newTask]);\n    };\n\n    /**\n     * \n     * Définit une fonction pour supprimer une tâche de la liste.\n     * Met à jour l'état de la liste de tâches en supprimant la tâche avec l'identifiant passé en paramètre.\n     * \n     * */ \n    const deleteTask = (id) => { \n        setTasks(tasks.filter((task) => task.id !== id));\n    };\n\n    /**\n     * \n     * Rendu de l'interface utilisateur.  \n     * \n     * <AddTask onAdd={addTask} /> Permet d'afficher le composant AddTask avec la fonction addTask en tant que props.\n     * \n     * Si la liste de tâches n'est pas vide, alors on affiche :\n     * les tâches pour chaque tâche dans la liste, avec l'identifiant, la description et la fonction deleteTask en tant que prop.\n     * \n     * Sinon, affiche un message indiquant qu'il n'y a pas de tâches.\n     * \n     * */ \n    return ( \n        <div className='container'>\n\n            <header className='header'>\n                <h1>Ma To-Do List</h1>\n                <AddTask onAdd={addTask} /> \n            </header>\n\n            {tasks.length > 0 ? (\n\n                <div className='tasks'>\n                    {tasks.map((task) => (\n                        <Task key={task.id} task={task} onDelete={deleteTask} />\n                    ))}\n                </div>\n\n            ) : ( \n\n                <p className='no-tasks'>Pas de tâche</p>\n\n            )}\n\n        </div>\n    );\n}\n\n// Exporte la fonction composant principale \"App\" pour pouvoir être utilisée ailleurs dans l'application.\nexport default App; \n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAC/B;IACIS,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;;EAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,OAAO,GAAIC,IAAI,IAAK;IACtB,MAAMH,EAAE,GAAGI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;IAChD,MAAMC,OAAO,GAAG;MAAEP,EAAE;MAAE,GAAGG;IAAK,CAAC;IAC/BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAES,OAAO,CAAC,CAAC;EACjC,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMC,UAAU,GAAIR,EAAE,IAAK;IACvBD,QAAQ,CAACD,KAAK,CAACW,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;EACpD,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBACIL,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEtBhB,OAAA;MAAQe,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACtBhB,OAAA;QAAAgB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtBpB,OAAA,CAACH,OAAO;QAACwB,KAAK,EAAEd;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB,EAERjB,KAAK,CAACmB,MAAM,GAAG,CAAC,gBAEbtB,OAAA;MAAKe,SAAS,EAAC,OAAO;MAAAC,QAAA,EACjBb,KAAK,CAACoB,GAAG,CAAEf,IAAI,iBACZR,OAAA,CAACF,IAAI;QAAeU,IAAI,EAAEA,IAAK;QAACgB,QAAQ,EAAEX;MAAW,GAA1CL,IAAI,CAACH,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,gBAINpB,OAAA;MAAGe,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEC;AAEd;;AAEA;AAAAlB,EAAA,CAjFSD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkFZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/carolinejustafre/Desktop/ToDoListReact/src/components/EditTask.jsx\",\n  _s = $RefreshSig$();\n/**\n * Composant fonctionnel EditTask qui gère l'édition d'une tâche.\n * \n * La fonctionnalité du composant :\n * \n * Le composant retourne un formulaire permettant de modifier le texte d'une tâche.\n * Lorsque l'utilisateur soumet le formulaire, la fonction onEdit est appelée avec la tâche éditée.\n * Si le champ de texte est vide, une alerte est affichée pour indiquer qu'il faut ajouter une tâche.\n * \n * \n * --------------------------------------------------\n * \n * Importation :\n * \n * React : Module principal de React.\n * useState : Fonction React permettant de définir et de mettre à jour l'état d'un composant.\n * \n * --------------------------------------------------\n * \n * Propriétés :\n * \n * task : la tâche à éditer.\n * onEdit : fonction qui sera appelée lorsque l'utilisateur soumettra le formulaire d'édition.\n * \n * --------------------------------------------------\n * \n * État :\n * \n * text : état local contenant le texte de la tâche éditée.\n * \n * --------------------------------------------------\n * \n * Fonctions :\n * onSubmit : fonction appelée lorsque l'utilisateur soumet le formulaire d'édition.\n * \n * --------------------------------------------------\n * \n * Puis exportation du composant EditTask afin d'être utilisé dans App.jsx.\n*/\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTask = _ref => {\n  _s();\n  let {\n    task,\n    onEdit\n  } = _ref;\n  const [text, setText] = useState(task.text);\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!text) {\n      alert('Please add a task');\n      return;\n    }\n    onEdit({\n      ...task,\n      text\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"edit-form\",\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Edit Task\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTask, \"khL2wo1t/ZUVH9Tt+mAs4tJWjvU=\");\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditTask","_ref","_s","task","onEdit","text","setText","onSubmit","e","preventDefault","alert","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carolinejustafre/Desktop/ToDoListReact/src/components/EditTask.jsx"],"sourcesContent":["/**\n * Composant fonctionnel EditTask qui gère l'édition d'une tâche.\n * \n * La fonctionnalité du composant :\n * \n * Le composant retourne un formulaire permettant de modifier le texte d'une tâche.\n * Lorsque l'utilisateur soumet le formulaire, la fonction onEdit est appelée avec la tâche éditée.\n * Si le champ de texte est vide, une alerte est affichée pour indiquer qu'il faut ajouter une tâche.\n * \n * \n * --------------------------------------------------\n * \n * Importation :\n * \n * React : Module principal de React.\n * useState : Fonction React permettant de définir et de mettre à jour l'état d'un composant.\n * \n * --------------------------------------------------\n * \n * Propriétés :\n * \n * task : la tâche à éditer.\n * onEdit : fonction qui sera appelée lorsque l'utilisateur soumettra le formulaire d'édition.\n * \n * --------------------------------------------------\n * \n * État :\n * \n * text : état local contenant le texte de la tâche éditée.\n * \n * --------------------------------------------------\n * \n * Fonctions :\n * onSubmit : fonction appelée lorsque l'utilisateur soumet le formulaire d'édition.\n * \n * --------------------------------------------------\n * \n * Puis exportation du composant EditTask afin d'être utilisé dans App.jsx.\n*/\nimport React, { useState } from 'react';\n\nconst EditTask = ({ task, onEdit }) => {\n  const [text, setText] = useState(task.text);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!text) {\n        alert('Please add a task');\n        return;\n    }\n    onEdit({ ...task, text });\n  };\n\n    return (\n        <form className='edit-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <input type='text' placeholder='Edit Task' value={text} onChange={(e) => setText(e.target.value)} />\n                <button className='btn'>Edit Task</button>\n            </div>\n        </form>\n    );\n};\n\nexport default EditTask;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAChC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACM,IAAI,CAACE,IAAI,CAAC;EAE3C,MAAME,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACJ,IAAI,EAAE;MACPK,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACJ;IACAN,MAAM,CAAC;MAAE,GAAGD,IAAI;MAAEE;IAAK,CAAC,CAAC;EAC3B,CAAC;EAEC,oBACIN,OAAA;IAAMY,SAAS,EAAC,WAAW;IAACJ,QAAQ,EAAEA,QAAS;IAAAK,QAAA,eAC3Cb,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBb,OAAA;QAAOc,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,WAAW;QAACC,KAAK,EAAEV,IAAK;QAACW,QAAQ,EAAGR,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACS,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpGtB,OAAA;QAAQY,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACxC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEf,CAAC;AAACnB,EAAA,CApBIF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAsBd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}